use mdd;

INSERT INTO `users` (`id`, `email`, `password`, `username`) VALUES (1, 'john@some.com', '$2a$10$va6xPJiatYRdY.acEy15LOSyfLvcYhRfeZjL3ApvahuI4J8ODWf6K', 'jdoe');
INSERT INTO `users` (`id`, `email`, `password`, `username`) VALUES (2, 'jane@mx.com', '$2a$10$.3O8MhIwmN7OMufUeZpSD.L53vMywFw8dsnQV7IBj0hFwW20OdG0m', 'jdoe666');
INSERT INTO `users` (`id`, `email`, `password`, `username`) VALUES (3, 'mikehorn@example.com', '$2a$10$9DL1ABc419UBa4.45DSLrOs2VgOtBEEyDtItW69FeHgitA4JCAVOu', 'mike_horn');


INSERT INTO `topics` (`id`, `description`, `name`) VALUES (1, 'RxJS (Reactive Extensions for JavaScript) est une bibliothèque pour la programmation réactive, facilitant la composition de programmes asynchrones et basés sur des événements à l\'aide de séquences observables. Elle permet de gérer efficacement les flux de données, les événements utilisateur, les requêtes HTTP et les WebSockets, en offrant une approche déclarative pour la gestion des données asynchrones.', 'RxJS');
INSERT INTO `topics` (`id`, `description`, `name`) VALUES (2, 'La Programmation Orientée Objet est un paradigme de programmation basé sur le concept d\'objets, qui contiennent des données sous forme de champs (attributs) et du code sous forme de procédures (méthodes). Elle favorise la modularité, la réutilisabilité et la maintenance du code en structurant les programmes autour d\'entités logiques. ​', 'POO');
INSERT INTO `topics` (`id`, `description`, `name`) VALUES (3, 'Introduits dans Java 8, les Streams offrent une approche fonctionnelle pour traiter des collections de données. Ils permettent d\'effectuer des opérations telles que le filtrage, le mapping et la réduction de manière déclarative, facilitant le traitement parallèle et séquentiel des données tout en améliorant la lisibilité du code.', 'Java Streams');
INSERT INTO `topics` (`id`, `description`, `name`) VALUES (4, 'Les expressions lambda en Java permettent d\'écrire des instances de classes fonctionnelles de manière plus concise. Elles simplifient la syntaxe pour les interfaces fonctionnelles, rendant le code plus lisible et facilitant la programmation fonctionnelle en Java. ', 'Java Lambda');
INSERT INTO `topics` (`id`, `description`, `name`) VALUES (5, 'Les directives Angular sont des classes qui ajoutent un comportement supplémentaire aux éléments du DOM. Elles permettent de manipuler la structure du DOM, de gérer des formulaires, des listes, des styles et de contrôler ce que l\'utilisateur voit, offrant ainsi une grande flexibilité dans la création de composants dynamiques.', 'Les directives Angular');
INSERT INTO `topics` (`id`, `description`, `name`) VALUES (6, 'Spring Boot est un framework open-source qui simplifie le développement d\'applications Java autonomes et prêtes pour la production. Il offre une configuration automatique, une gestion simplifiée des dépendances et une approche convention over configuration, permettant aux développeurs de se concentrer sur la logique métier.', 'Spring Boot');
INSERT INTO `topics` (`id`, `description`, `name`) VALUES (7, 'Docker est une plateforme open-source qui permet de développer, expédier et exécuter des applications dans des conteneurs. Ces conteneurs sont des environnements légers et portables qui regroupent l\'application avec toutes ses dépendances, assurant une exécution cohérente sur différents systèmes.', 'Docker');
INSERT INTO `topics` (`id`, `description`, `name`) VALUES (8, 'Kubernetes est une plateforme open-source conçue pour automatiser le déploiement, la mise à l\'échelle et la gestion des applications conteneurisées. Elle offre une infrastructure déclarative et extensible, facilitant la gestion des charges de travail et des services dans des environnements de production.', 'Kubernetes');
INSERT INTO `topics` (`id`, `description`, `name`) VALUES (9, 'TypeScript est un langage de programmation fortement typé qui s\'appuie sur JavaScript, ajoutant des fonctionnalités telles que le typage statique, les interfaces et les classes. Il améliore la qualité du code et la productivité des développeurs en fournissant des outils de développement robustes pour des applications à grande échelle.', 'TypeScript');
INSERT INTO `topics` (`id`, `description`, `name`) VALUES (10, 'Node.js est un environnement d\'exécution JavaScript asynchrone et orienté événements, conçu pour construire des applications réseau évolutives. Il permet d\'exécuter du code JavaScript côté serveur, offrant une architecture non bloquante idéale pour les applications en temps réel.', 'Node.js');
INSERT INTO `topics` (`id`, `description`, `name`) VALUES (11, 'Les API REST (Representational State Transfer) sont des interfaces de programmation qui utilisent les méthodes HTTP standard pour permettre la communication entre les clients et les serveurs. Elles sont largement utilisées pour créer des services web évolutifs et interopérables.', 'REST API');
INSERT INTO `topics` (`id`, `description`, `name`) VALUES (12, 'GraphQL est un langage de requête pour les API qui permet aux clients de demander exactement les données dont ils ont besoin. Il offre une alternative flexible aux API REST, réduisant la surcharge de données et améliorant l\'efficacité des échanges entre le client et le serveur.', 'GraphQL');


INSERT INTO `subscriptions` (`id`, `topic_id`, `user_id`) VALUES (1, 1, 1);
INSERT INTO `subscriptions` (`id`, `topic_id`, `user_id`) VALUES (2, 2, 1);
INSERT INTO `subscriptions` (`id`, `topic_id`, `user_id`) VALUES (3, 2, 2);

INSERT INTO `posts` (`created_at`, `id`, `topic_id`, `user_id`, `title`, `content`) VALUES ('2025-04-16 12:23:23.254000', 2, 1, 1, 'Introduction à RxJS : La Programmation Réactive en JavaScript', '\nLorem ipsum dolor sit amet consectetur adipisicing elit. Debitis fuga facere provident numquam? Nihil quos fuga maxime enim modi quibusdam aut consectetur, non quae soluta, omnis magni quisquam! Accusamus sequi mollitia distinctio ipsum maiores impedit laboriosam? Sint nulla perspiciatis voluptatem mollitia eligendi blanditiis recusandae quam aliquid quae! Facere, tempore maxime! Doloremque laudantium quidem fugit et aspernatur culpa eos unde iste at eius esse sit neque, quos incidunt nobis consequatur exercitationem animi nihil. Libero dignissimos eaque nemo odit dolorum amet veniam natus voluptate itaque harum sapiente, voluptatum perferendis officia sed distinctio et esse aspernatur fugiat ipsa voluptatem alias mollitia obcaecati aut!');
INSERT INTO `posts` (`created_at`, `id`, `topic_id`, `user_id`, `title`, `content`) VALUES ('2025-04-16 13:23:36.961000', 3, 5, 2, 'La directive ngFor', '\nLorem ipsum dolor sit amet consectetur adipisicing elit. Debitis fuga facere provident numquam? Nihil quos fuga maxime enim modi quibusdam aut consectetur, non quae soluta, omnis magni quisquam! Accusamus sequi mollitia distinctio ipsum maiores impedit laboriosam? Sint nulla perspiciatis voluptatem mollitia eligendi blanditiis recusandae quam aliquid quae! Facere, tempore maxime! Doloremque laudantium quidem fugit et aspernatur culpa eos unde iste at eius esse sit neque, quos incidunt nobis consequatur exercitationem animi nihil. Libero dignissimos eaque nemo odit dolorum amet veniam natus voluptate itaque harum sapiente, voluptatum perferendis officia sed distinctio et esse aspernatur fugiat ipsa voluptatem alias mollitia obcaecati aut!');
INSERT INTO `posts` (`created_at`, `id`, `topic_id`, `user_id`, `title`, `content`) VALUES ('2025-04-16 13:27:28.660000', 4, 11, 3, 'Bonnes pratiques pour concevoir une API REST', '\nLorem ipsum dolor sit amet consectetur adipisicing elit. Debitis fuga facere provident numquam? Nihil quos fuga maxime enim modi quibusdam aut consectetur, non quae soluta, omnis magni quisquam! Accusamus sequi mollitia distinctio ipsum maiores impedit laboriosam? Sint nulla perspiciatis voluptatem mollitia eligendi blanditiis recusandae quam aliquid quae! Facere, tempore maxime! Doloremque laudantium quidem fugit et aspernatur culpa eos unde iste at eius esse sit neque, quos incidunt nobis consequatur exercitationem animi nihil. Libero dignissimos eaque nemo odit dolorum amet veniam natus voluptate itaque harum sapiente, voluptatum perferendis officia sed distinctio et esse aspernatur fugiat ipsa voluptatem alias mollitia obcaecati aut!');
INSERT INTO `posts` (`created_at`, `id`, `topic_id`, `user_id`, `title`, `content`) VALUES ('2025-04-16 13:32:38.826000', 5, 3, 1, 'Utilisation simple des Streams en java', '\nLorem, ipsum dolor sit amet consectetur adipisicing elit. Alias eveniet ullam veritatis laborum, iusto ex eum repudiandae quas magni. Illum molestiae enim minima cupiditate! Provident voluptas asperiores natus cupiditate, reiciendis cum quas, ea quo a totam commodi quia vel nihil eum tempore perferendis dolore quae illo fuga quam alias. Dolor exercitationem ea facere quis blanditiis explicabo earum enim temporibus cumque amet? Dolores, nulla pariatur natus cupiditate delectus quo provident veniam aliquid accusamus sint id ducimus corrupti aut incidunt quod! Vel laudantium quae ipsam, non doloremque laboriosam, inventore labore veritatis, officia ea amet? Blanditiis, debitis veritatis, suscipit modi qui doloribus neque aut sint voluptatibus maiores similique est corporis inventore soluta fugiat reiciendis aliquam illo distinctio voluptatem, sed voluptates architecto? Voluptatibus, distinctio quaerat ducimus sed magnam laudantium beatae vitae illum temporibus nulla ex delectus omnis error nobis deserunt fuga voluptate perferendis consectetur esse ea consequuntur iure aliquam natus deleniti? Vel sit itaque sed necessitatibus! Corporis sapiente delectus modi minus nam, nisi quod adipisci rerum impedit nobis excepturi, temporibus reiciendis veniam necessitatibus suscipit, possimus magnam velit ex exercitationem eaque itaque rem porro explicabo. Maiores quaerat magnam illum numquam sequi error id, illo animi dolore quia. Itaque assumenda nam ipsum ab suscipit maxime! Asperiores?');


INSERT INTO `comments` (`created_at`, `id`, `post_id`, `user_id`, `content`) VALUES ('2025-04-16 13:33:46.642000', 1, 3, 1, 'merci pour l\'article');
INSERT INTO `comments` (`created_at`, `id`, `post_id`, `user_id`, `content`) VALUES ('2025-04-16 13:33:55.469000', 2, 3, 3, 'un autre commentaire');
